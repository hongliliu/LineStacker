.. _example:

Example
***************
All examples presented bellow, as well as the example data sets used to execute them, are provided in LineStacker/Example

1D LineStacker 
==============

Basic usage
-----------

One dimensional example use of Line-Stacker

.. code-block:: python

	#This files shows basic examplpe use of
	#one dimmensional stacking with LineStacker
	import numpy as np
	import LineStacker.OneD_Stacker

	#In this example we stack 100 spectra that are located in the data folder
	#and are named spectra_'+str(i) for i in range(100),
	#the lines are identified with a central velocity, which can be found in the file 'data/central_velocity_'
	#lines can be idenfified in many ways however, see LineStacker.OneD_Stacker.Stack for more information
	numberOfSpectra=100
	allImages=([0 for i in range(numberOfSpectra)])
	for i in range(numberOfSpectra):
    	tempSpectra=np.loadtxt('data/spectra_'+str(i))
    	tempCenter=np.loadtxt('data/central_velocity_'+str(i))
    	#initializing all spectra as Image class, this is necessary to use OneD_Stacker.Stack
    	allImages[i]=LineStacker.OneD_Stacker.Image(spectrum=tempSpectra, centralVelocity=tempCenter)
	stacked=LineStacker.OneD_Stacker.Stack(allImages)
	
With a resulting plot looking like this:

.. image:: _static/1Dstack.png

Cube LineStacker
================

Basic usage
-----------

.. code-block:: python

	import LineStacker
	import LineStacker.line_image

	#coordinates files are selected using the GUI
	coordNames=LineStacker.readCoordsNamesGUI()
	coords=LineStacker.readCoords(coordNames)

	#image names are identical to coordinates files, with '.image' replacing '_coords.txt'
	imagenames=([coord.strip('_coords.txt')+'.image' for coord in coordNames])

	#because redshift is used to identify the line center, the emission frequency is also provided
	stacked=LineStacker.line_image.stack(   coords,
                                        	imagenames=imagenames,
                                        	fEm=1897420620253.1646,
                                        	stampsize=16)

Here the GUI is used to select the coordinates files, it looks like this:

.. image:: _static/gui.png

The above lines produce a stacked cube who that can be viewed with the "viewer" task in CASA:

.. image:: _static/stack-result-cube-example.png

